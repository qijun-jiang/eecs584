======EECS 584 Final Project: Parallel Execution of Spatial Queries on Shared Memory Machine======
- Group Member:
  Qijun Jiang, Yicong Zhang, Zhizhong Zhang
- Instructor:
  Barzan Mozafari
==================================================================================================

- Usage of the tool

1. Generate loading data, the default loading size is 500,000 rows.
   * Command line: ./genLoad
   * Generated file name: sql/load_N500K.sql

2. Generate search queries
   * Command line: ./genSearch <number of query> <percentage of search area> <percetage of selectivity>
     Example:      ./genSearch 1000 5 50 
                   [It generates 1000 search queries, with 5% area of the whole map, 
                    and 50% selectivity in non-spatial attribute]
   * Generated file name: sql/search_N500K_Q1000_p5.0_s50.0.sql

3. Start server and load data, the default 500,000 load file will take about 7 seconds
   * Command line: ./server -l <load file name>
     Example:      ./server -l sql/load_N500K.sql
   * When every 200,000 rows is loaded, timer will be printed as the log
   * After all data is loaded, the hostname and port number of server will be printed
     like: "bigdata.umich.edu:37476"
   * [!--Attention--!] Please only use .sql file generated by the generator and keep it in sql/ folder!

4. Wait until the hostname and port number of the server is printed, open a new terminal

5. Run client with query data in a separate terminal from the server
   * Command line: ./client -s <hostname:portnumber> -q <query file name>
     Example:      ./client -s bigdata.umich.edu:37476 -q -q sql/search_N500K_Q1000_p5.0_s50.0.sql
   * The result file name will be printed. The query results and the runtime is stored in the file.
     like: "result file name = result/result_search_N500K_Q1000_p5.0_s50.0.txt"
   * [!--Attention--!] Please only use .sql file generated by the generator and keep it in sql/ folder!

6. You can find the result file in result/ folder or check it quickly by use
   * Command line: cat result/result_search_N500K_Q1000_p5.0_s50.0.txt

7. To change the algorithm for selection, you can uncomment one algorithm in 
   Line 583-592 in RTree.h
	"
	  /*--------------------------------------Change Search Mode-------------------------------------*/ 
	  //Serial Algorithm 
	  //SearchContain(m_root, &rect, foundCount, a_resultCallback, a_context, a_context_size);  

	  //Master-Worker Parallel Algorithm
	  MasterWorkerSearchContain(m_root, &rect, foundCount, a_resultCallback, a_context, a_context_size);
	  
	  //Peer-to-Peer Parallel Algorithm
	  //P2PSearchContain(m_root, &rect, foundCount, a_resultCallback, a_context, a_context_size);
	  /*---------------------------------------------------------------------------------------------*/
	"
   * [!--Attention--!] Please do not forget to comment the other two algorithms!

8. Please do not delete sql/ and result/ folder even though it is empty

－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－

－ Major Function

1. Master-Worker Algorithm Implementation
   * Function name: MasterWorkerSearchContain
   * Where to find: Line 1707-1835 in RTree.h

2. Peer-to-Peer Algorithm Implementation
   * Function name: P2PSearchContain
   * Where to find: Line 1838-2032 in RTree.h

3. Callback Functions for Non-spatial Attribute Comparison
   * Function name: NoCompareCallback, GreaterCallback, LessCallback, EqualCallback
   * Where to find: Line 5-62 in executor.cpp

- Other trivial functions
1. SQL query parser
   * Function name: parser
   * Where to find: Line 42-98 in parser.cpp

2. socket operations in client and server for connection
   * Where to find: client.cpp and server.cpp 

3. generate load data and search data
   * Where to find: genLoad.cpp and genSearch.cpp

－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－

- Reference

1. RTree serial legacy implementation: 
   GitHub: https://github.com/nushoin/RTree 

2. Part of the socket-related code for connection in client.cpp and server.cpp is 
   from Qijun's Computer Networks Course Project
